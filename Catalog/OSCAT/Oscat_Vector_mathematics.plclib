<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<plcLibrary schemaVersion="2.9">
	<lib version="1.0.1" name="Oscat - Vector mathematics" fullXml="true">
		<descr>Author URL: http://oscat.de</descr>
		<libWorkspace>
			<folder name="Oscat - Vector mathematics" excludeFromBuild="false" excludeFromBuildIfNotDef="">
				<Pou name="V3_NUL"/>
				<Pou name="V3_YANG"/>
				<Pou name="V3_PAR"/>
				<Pou name="V3_ADD"/>
				<Pou name="V3_REV"/>
				<Pou name="V3_ABS"/>
				<Pou name="V3_ANG"/>
				<Pou name="V3_DPRO"/>
				<Pou name="V3_XPRO"/>
				<Pou name="V3_NORM"/>
				<Pou name="V3_ZANG"/>
				<Pou name="V3_SMUL"/>
				<Pou name="V3_XANG"/>
				<Pou name="V3_SUB"/>
			</folder>
		</libWorkspace>
		<globalVars/>
		<retainVars/>
		<constantVars/>
		<functions>
			<function name="V3_NUL" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>BOOL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.1	10. mar. 2009
programmer 	hugo
tested by		tobias

this function checks if a vectors in a null Vector

*)

V3_NUL := A.X = 0.0 AND A.Y = 0.0 AND A.Z = 0.0;



(* revision history
hm	12 dec 2007	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	changed syntax of real constants to 0.0

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_YANG" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>REAL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
					</inputVars>
					<localVars>
						<var name="la" type="REAL"/>
					</localVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[

(*
version 1.1	10. mar. 2009
programmer 	hugo
tested by		tobias

this function calculates the angle between the Y-axis and a vectors in a 3 dimensional space

*)

la := V3_ABS(a);
IF la > 0.0 THEN
	V3_YANG := ACOS(A.Y / la);
END_IF;

(* revision history
hm	11 dec 2007	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	changed syntax of real constants to 0.0

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_PAR" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>BOOL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
						<var name="B" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.1	10. mar. 2009
programmer 	hugo
tested by		tobias

this function checks if two vectors in a 3 dimensional space are parallel.
which means the two vectors have the same direction

*)

V3_PAR := V3_ABS(V3_XPRO(A, B)) = 0.0;



(* revision history
hm	11 dec 2007	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	changed syntax of real constants to 0.0

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_ADD" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>vector_3</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
						<var name="B" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.0	11 dec 2007
programmer 	hugo
tested by		tobias

this function adds two vectors in a 3 dimensional space

*)

V3_ADD.X := A.X + B.X;
V3_ADD.Y := A.Y + B.Y;
V3_ADD.Z := A.Z + B.Z;



(* revision history
hm		11 dec 2007	rev 1.0
	original version

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_REV" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>vector_3</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.0	11 dec 2007
programmer 	hugo
tested by		tobias

this function reverses a vector in a 3 dimensional space

*)

V3_REV.X := -A.X;
V3_REV.Y := -A.Y;
V3_REV.Z := -A.Z;



(* revision history
hm		11 dec 2007	rev 1.0
	original version

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_ABS" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>REAL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.0	11 dec 2007
programmer 	hugo
tested by		tobias

this function calculates the length of a vectors in a 3 dimensional space

*)

V3_ABS := SQRT(A.X * A.X + A.Y * A.Y + A.Z * A.Z);


(* revision history
hm		11 dec 2007	rev 1.0
	original version

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_ANG" version="1.0.0" creationDate="0" lastModifiedDate="1631603972" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>REAL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
						<var name="B" type="Vector_3"/>
					</inputVars>
					<localVars>
						<var name="d" type="REAL"/>
					</localVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[

(*
version 1.1	10. mar. 2009
programmer 	hugo
tested by		tobias

this function calculates the angle between two vectors in a 3 dimensional space

*)

d := V3_ABS(A) * V3_ABS(B);
IF d > 0 THEN
	V3_ANG := ACOS(LIMIT(V3_DPRO(A, B) / d, -1.0, 1.0));
END_IF;

(* revision history
hm	11. dec. 2007	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	changed syntax of real constants to 0.0

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_DPRO" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>REAL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
						<var name="B" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.0	11 dec 2007
programmer 	hugo
tested by		tobias

this function calculates the dot product of two vectors in 3 dimensional space

*)

V3_DPRO := A.X * B.X + A.Y * B.Y + A.Z * B.Z;


(* revision history
hm		11 dec 2007	rev 1.0
	original version

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_XPRO" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>vector_3</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
						<var name="B" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.0	11 dec 2007
programmer 	hugo
tested by		tobias

this function adds two vectors in a 3 dimensional space

*)

V3_XPRO.X := A.Y * B.Z - A.Z * B.Y;
V3_XPRO.Y := A.Z * B.X - A.X * B.Z;
V3_XPRO.Z := A.X * B.Y - A.Y * B.X;



(* revision history
hm		11 dec 2007	rev 1.0
	original version

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_NORM" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>vector_3</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
					</inputVars>
					<localVars>
						<var name="la" type="REAL"/>
					</localVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[

(*
version 1.1	10. mar. 2009
programmer 	hugo
tested by		tobias

this function generates a vectors with absolute length 1 from a vector A in a 3 dimensional space

*)

la := V3_ABS(A);
IF la > 0.0 THEN
	V3_NORM := V3_SMUL(A, 1.0 / la);
END_IF;

(* revision history
hm	11 dec 2007	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	changed syntax of real constants to 0.0

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_ZANG" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>REAL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
					</inputVars>
					<localVars>
						<var name="la" type="REAL"/>
					</localVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[

(*
version 1.1	10. mar. 2009
programmer 	hugo
tested by		tobias

this function calculates the angle between the Z-axis and a vectors in a 3 dimensional space

*)

la := V3_ABS(a);
IF la > 0.0 THEN
	V3_ZANG := ACOS(A.Z / la);
END_IF;

(* revision history
hm	11 dec 2007	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	changed syntax of real constants to 0.0

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_SMUL" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>vector_3</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
						<var name="M" type="REAL"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.0	11 dec 2007
programmer 	hugo
tested by		tobias

this function multiplies a vectors in a 3 dimensional space with a skalar M

*)

V3_SMUL.X := A.X * M;
V3_SMUL.Y := A.Y * M;
V3_SMUL.Z := A.Z * M;



(* revision history
hm		11 dec 2007	rev 1.0
	original version

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_XANG" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>REAL</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
					</inputVars>
					<localVars>
						<var name="la" type="REAL"/>
					</localVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[

(*
version 1.1	10. mar. 2009
programmer 	hugo
tested by		tobias

this function calculates the angle between the X-axis and a vectors in a 3 dimensional space

*)

la := V3_ABS(a);
IF la > 0.0 THEN
	V3_XANG := ACOS(A.X / la);
END_IF;

(* revision history
hm	11 dec 2007	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	changed syntax of real constants to 0.0

*)
]]>
				</sourceCode>
			</function>
			<function name="V3_SUB" version="1.0.0" creationDate="0" lastModifiedDate="0" excludeFromBuild="FALSE" excludeFromBuildIfNotDef="">
				<returnValue>vector_3</returnValue>
				<vars>
					<inputVars>
						<var name="A" type="Vector_3"/>
						<var name="B" type="Vector_3"/>
					</inputVars>
				</vars>
				<iecDeclaration active="FALSE"/>
				<sourceCode type="ST">
					<![CDATA[


(*
version 1.0	11 dec 2007
programmer 	hugo
tested by		tobias

this function subtracts two vectors in a 3 dimensional space
V3_SUB = A - B

*)

V3_SUB.X := A.X - B.X;
V3_SUB.Y := A.Y - B.Y;
V3_SUB.Z := A.Z - B.Z;



(* revision history
hm		11 dec 2007	rev 1.0
	original version

*)
]]>
				</sourceCode>
			</function>
		</functions>
		<functionBlocks/>
		<programs/>
		<macros/>
		<structs/>
		<typedefs/>
		<enums/>
		<subranges/>
		<interfaces/>
	</lib>
</plcLibrary>
